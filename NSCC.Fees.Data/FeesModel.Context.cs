//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NSCC.Fees.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FeesEntities : DbContext
    {
        public FeesEntities()
            : base("name=FeesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AcademicYear> AcademicYears { get; set; }
        public virtual DbSet<CollegeFee> CollegeFees { get; set; }
        public virtual DbSet<CostItem> CostItems { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Program> Programs { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
        public virtual DbSet<School> Schools { get; set; }
        public virtual DbSet<Tuition> Tuitions { get; set; }
        public virtual DbSet<Delivery> Deliveries { get; set; }
    
        public virtual ObjectResult<Schedule> GetSchedulesByAcademicYear(Nullable<int> academicYearID)
        {
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Schedule>("GetSchedulesByAcademicYear", academicYearIDParameter);
        }
    
        public virtual ObjectResult<Schedule> GetSchedulesByAcademicYear(Nullable<int> academicYearID, MergeOption mergeOption)
        {
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Schedule>("GetSchedulesByAcademicYear", mergeOption, academicYearIDParameter);
        }
    }
}
